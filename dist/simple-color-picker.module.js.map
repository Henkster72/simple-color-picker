{"version":3,"file":"simple-color-picker.module.js","sources":["../src/types.ts","../src/utils.ts","../src/color.ts","../src/ColorPicker.ts"],"sourcesContent":["export function isString(str: any): boolean {\n  return typeof str === 'string'\n}\n\nexport function isNumber(num: any): boolean {\n  return typeof num === 'number' && !isNaN(num)\n}\n","export function clamp(value: number, min: number, max: number) {\n  return Math.min(Math.max(value, min), max)\n}\n\nexport type Position = {\n  x: number\n  y: number\n}\n\nexport function getMousePosition(e: MouseEvent | TouchEvent): Position {\n  if (e.type.indexOf('touch') === 0) {\n    const touch = (e as TouchEvent).touches[0]\n    return { x: touch.clientX, y: touch.clientY }\n  }\n  const mouse = e as MouseEvent\n  return { x: mouse.clientX, y: mouse.clientY }\n}\n\nexport function pad2(c: string): string {\n  return c.length == 1 ? '0' + c : '' + c\n}","import { isNumber } from './types'\nimport { pad2 } from './utils'\n\n// Each member has a range of 0-1\\\nexport type RGBAColor = {\n  r: number\n  g: number\n  b: number\n  a?: number\n}\n\n// Each member has a range of 0-1\nexport type HSVAColor = {\n  h: number\n  s: number\n  v: number\n  a?: number\n}\n\nexport class Color {\n  private _rgba: RGBAColor = { r: 0, g: 0, b: 0, a: 1 }\n  private _hsva: HSVAColor = { h: 0, s: 0, v: 0, a: 1 }\n  private _hexNumber: number\n  private _brightness: number\n  private _hexString: string\n  private _isDark: boolean\n  private _isLight: boolean\n\n  constructor(color: number | string) {\n    this.fromHex(color)\n  }\n\n  public fromHex(color: number | string): void {\n    if (!color) color = 0\n\n    if (isNumber(color)) {\n      this._hexNumber = color as number\n      this._hexString = numberToHexString(this._hexNumber)\n    } else {\n      this._hexString = (color as string).toUpperCase()\n      this._hexNumber = hexStringToNumber(this._hexString)\n    }\n    const { r, g, b } = hexNumberToRgb(this._hexNumber)\n\n    this._rgba.r = r\n    this._rgba.g = g\n    this._rgba.b = b\n\n    const { h, s, v } = rgbToHsv(this._rgba)\n\n    this._hsva.h = h\n    this._hsva.s = s\n    this._hsva.v = v\n\n    this._updateBrightness()\n  }\n\n  public fromHsv(color: HSVAColor): void {\n    const { h, s, v } = color\n\n    this._hsva.h = h\n    this._hsva.s = s\n    this._hsva.v = v\n\n    const { r, g, b } = hsvToRgb(this._hsva)\n\n    this._rgba.r = r\n    this._rgba.g = g\n    this._rgba.b = b\n\n    this._hexString = rgbToHex(this._rgba)\n    this._hexNumber = hexStringToNumber(this._hexString)\n\n    this._updateBrightness()\n  }\n\n  private _updateBrightness(): void {\n    const { r, g, b } = this._rgba\n    this._brightness = (r * 299 + g * 587 + b * 114) / 1000\n    this._isDark = this._brightness < 0.5\n    this._isLight = !this._isDark\n  }\n\n  get rgb(): RGBAColor {\n    return this._rgba\n  }\n\n  get hsv(): HSVAColor {\n    return this._hsva\n  }\n\n  get hex(): number {\n    return this._hexNumber\n  }\n\n  get hexString(): string {\n    return this._hexString\n  }\n\n  get brightness(): number {\n    return this._brightness\n  }\n\n  get isDark(): boolean {\n    return this._isDark\n  }\n\n  get isLight(): boolean {\n    return this._isLight\n  }\n}\n\nexport function hexNumberToRgb(color: number): RGBAColor {\n  const r = ((color >> 16) & 255) / 255\n  const g = ((color >> 8) & 255) / 255\n  const b = (color & 255) / 255\n  return { r, g, b }\n}\n\nexport function rgbToHex(color: RGBAColor): string {\n  const { r, g, b } = color\n  var hex = [\n    '#',\n    pad2(Math.round(r * 255).toString(16)),\n    pad2(Math.round(g * 255).toString(16)),\n    pad2(Math.round(b * 255).toString(16))\n  ]\n\n  return hex.join('').toUpperCase()\n}\n\nexport function numberToHexString(color: number): string {\n  return '#' + ('00000' + (color | 0).toString(16)).substr(-6).toUpperCase()\n}\n\nexport function hexStringToNumber(color: string): number {\n  return parseInt(color.replace('#', ''), 16)\n}\n\nexport function hsvToRgb(color: HSVAColor): RGBAColor {\n  let { h, s, v } = color\n  h *= 6\n\n  const i = Math.floor(h)\n  const f = h - i\n  const p = v * (1 - s)\n  const q = v * (1 - f * s)\n  const t = v * (1 - (1 - f) * s)\n  const mod = i % 6\n  const r = [v, q, p, p, t, v][mod]\n  const g = [t, v, v, q, p, p][mod]\n  const b = [p, p, t, v, v, q][mod]\n\n  return { r, g, b }\n}\n\nexport function rgbToHsv(color: RGBAColor): HSVAColor {\n  const { r, g, b } = color\n  const max = Math.max(r, g, b)\n  const min = Math.min(r, g, b)\n  const d = max - min\n  const s = max === 0 ? 0 : d / max\n  const v = max\n\n  let h\n\n  if (max == min) {\n    h = 0\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0)\n        break\n      case g:\n        h = (b - r) / d + 2\n        break\n      case b:\n        h = (r - g) / d + 4\n        break\n    }\n    h /= 6\n  }\n  return { h, s, v }\n}\n","import { Color, RGBAColor, HSVAColor } from './color'\nimport { isNumber, isString } from './types'\nimport { clamp, Position, getMousePosition } from './utils'\n\ntype ColorPickerOptions = {\n  window?: Window\n  el?: HTMLElement | string\n  background?: string | number\n  widthUnits?: string\n  heightUnits?: string\n  width?: number\n  height?: number\n  color?: string | number\n}\n\nexport class ColorPicker {\n  private _window: Window\n  private _document: Document\n  private _widthUnits: string = 'px'\n  private _heightUnits: string = 'px'\n  private _huePosition: number = 0\n  private _hueHeight: number = 0\n  private _maxHue: number = 0\n  public _inputIsNumber: boolean = false\n  private _saturationWidth: number = 0\n  private _callbacks: Function[] = []\n\n  public width: number = 0\n  public height: number = 0\n  public hue: number = 0\n  public position: Position = { x: 0, y: 0 }\n  public color: Color = new Color(0)\n  public backgroundColor: Color = new Color(0)\n  public hueColor: Color = new Color(0)\n\n  public $el: HTMLElement\n  public $saturation: HTMLElement\n  public $hue: HTMLElement\n  public $sbSelector: HTMLElement\n  public $hSelector: HTMLElement\n\n  constructor(options: ColorPickerOptions = {}) {\n    // Register window and document references in case this is instantiated inside of an iframe\n    this._window = options.window || window\n    this._document = this._window.document\n\n    // Create DOM\n    this.$el = this._document.createElement('div')\n    this.$el.className = 'Scp'\n    this.$el.innerHTML = `\n      <div class=\"Scp-saturation\">\n        <div class=\"Scp-brightness\"></div>\n        <div class=\"Scp-sbSelector\"></div>\n      </div>\n      <div class=\"Scp-hue\">\n        <div class=\"Scp-hSelector\"></div>\n      </div>\n    `\n\n    // DOM accessors\n    this.$saturation = this.$el.querySelector('.Scp-saturation')\n    this.$hue = this.$el.querySelector('.Scp-hue')\n    this.$sbSelector = this.$el.querySelector('.Scp-sbSelector')\n    this.$hSelector = this.$el.querySelector('.Scp-hSelector')\n\n    // Event listeners\n    this.$saturation.addEventListener('mousedown', this._onSaturationMouseDown)\n    this.$saturation.addEventListener('touchstart', this._onSaturationMouseDown)\n    this.$hue.addEventListener('mousedown', this._onHueMouseDown)\n    this.$hue.addEventListener('touchstart', this._onHueMouseDown)\n\n    // Some styling and DOMing from options\n    if (options.el) {\n      this.appendTo(options.el)\n    }\n\n    if (options.background) {\n      this.setBackgroundColor(options.background)\n    }\n\n    if (options.widthUnits) {\n      this._widthUnits = options.widthUnits\n    }\n\n    if (options.heightUnits) {\n      this._heightUnits = options.heightUnits\n    }\n\n    this.setSize(options.width || 175, options.height || 150)\n    this.setColor(options.color)\n  }\n\n  /**\n   * Add the ColorPicker instance to a DOM element.\n   * @param  {HTMLElement} el\n   * @return {ColorPicker} Returns itself for chaining purpose\n   */\n  public appendTo(el: HTMLElement | string): ColorPicker {\n    if (isString(el)) {\n      document.querySelector(el as string).appendChild(this.$el)\n    } else {\n      ;(el as HTMLElement).appendChild(this.$el)\n    }\n    return this\n  }\n\n  /**\n   * Removes picker from its parent and kill all listeners.\n   * Call this method for proper destroy.\n   */\n  public remove() {\n    this._callbacks = []\n\n    this._onSaturationMouseUp()\n    this._onHueMouseUp()\n\n    this.$saturation.removeEventListener(\n      'mousedown',\n      this._onSaturationMouseDown\n    )\n    this.$saturation.removeEventListener(\n      'touchstart',\n      this._onSaturationMouseDown\n    )\n    this.$hue.removeEventListener('mousedown', this._onHueMouseDown)\n    this.$hue.removeEventListener('touchstart', this._onHueMouseDown)\n\n    // this.off()\n\n    if (this.$el.parentNode) {\n      this.$el.parentNode.removeChild(this.$el)\n    }\n  }\n\n  /**\n   * Manually set the current color of the picker. This is the method\n   * used on instantiation to convert `color` option to actual color for\n   * the picker. Param can be a hexadecimal number or an hex String.\n   * @param {String|Number} color hex color desired\n   * @return {ColorPicker} Returns itself for chaining purpose\n   */\n  public setColor(color: string | number): ColorPicker {\n    this._inputIsNumber = isNumber(color)\n    this.color.fromHex(color)\n\n    const { h, s, v } = this.color.hsv\n\n    if (!isNaN(h)) {\n      this.hue = h\n    }\n\n    this._moveSelectorTo(this._saturationWidth * s, (1 - v) * this._hueHeight)\n    this._moveHueTo((1 - this.hue) * this._hueHeight)\n\n    this._updateHue()\n    return this\n  }\n\n  /**\n   * Set size of the color picker for a given width and height. Note that\n   * a padding of 5px will be added if you chose to use the background option\n   * of the constructor.\n   * @param {Number} width\n   * @param {Number} height\n   * @return {ColorPicker} Returns itself for chaining purpose\n   */\n  public setSize(width: number, height: number): ColorPicker {\n    this.width = width\n    this.height = height\n    this.$el.style.width = this.width + this._widthUnits\n    this.$el.style.height = this.height + this._heightUnits\n\n    this._saturationWidth = this.width - 25\n    this.$saturation.style.width = this._saturationWidth + 'px'\n\n    this._hueHeight = this.height\n    this._maxHue = this._hueHeight - 2\n\n    return this\n  }\n\n  /**\n   * Set the background color of the picker. It also adds a 5px padding\n   * for design purpose.\n   * @param {String|Number} color hex color desired for background\n   * @return {ColorPicker} Returns itself for chaining purpose\n   */\n  public setBackgroundColor(color: string | number): ColorPicker {\n    this.backgroundColor.fromHex(color)\n    this.$el.style.padding = '5px'\n    this.$el.style.background = this.backgroundColor.hexString\n    return this\n  }\n\n  /**\n   * Removes background of the picker if previously set. It's no use\n   * calling this method if you didn't set the background option on start\n   * or if you didn't call setBackgroundColor previously.\n   */\n  public setNoBackground(): ColorPicker {\n    this.$el.style.padding = '0px'\n    this.$el.style.background = 'none'\n    return this\n  }\n\n  /**\n   * Registers callback to the update event of the picker.\n   * picker inherits from [component/emitter](https://github.com/component/emitter)\n   * so you could do the same thing by calling `colorPicker.on('update');`\n   * @param  {Function} callback\n   * @return {ColorPicker} Returns itself for chaining purpose\n   */\n  public onChange(callback: Function): ColorPicker {\n    if (this._callbacks.indexOf(callback) < 0) {\n      this._callbacks.push(callback)\n      callback(this.getHexString())\n    }\n    return this\n  }\n\n  /* =============================================================================\n    Color getters\n  ============================================================================= */\n  /**\n   * Main color getter, will return a formatted color string depending on input\n   * or a number depending on the last setColor call.\n   * @return {Number|String}\n   */\n  public getColor(): number | string {\n    if (this._inputIsNumber) {\n      return this.getHexNumber()\n    }\n    return this.getHexString()\n  }\n\n  /**\n   * Returns color as css hex string (ex: '#FF0000').\n   * @return {String}\n   */\n  public getHexString(): string {\n    return this.color.hexString.toUpperCase()\n  }\n\n  /**\n   * Returns color as number (ex: 0xFF0000).\n   * @return {Number}\n   */\n  public getHexNumber(): number {\n    return this.color.hex\n  }\n\n  /**\n   * Returns color as {r: 1, g: 0, b: 0} object.\n   * @return {Object}\n   */\n  public getRGB(): RGBAColor {\n    return this.color.rgb\n  }\n\n  /**\n   * Returns color as {h: 100, s: 1, v: 1} object.\n   * @return {Object}\n   */\n  public getHSV(): HSVAColor {\n    return this.color.hsv\n  }\n\n  /**\n   * Returns true if color is perceived as dark\n   * @return {Boolean}\n   */\n  public isDark(): boolean {\n    return this.color.isDark\n  }\n\n  /**\n   * Returns true if color is perceived as light\n   * @return {Boolean}\n   */\n  public isLight(): boolean {\n    return this.color.isLight\n  }\n\n  /* =============================================================================\n    Private methods\n  ============================================================================= */\n  private _moveSelectorTo(x: number, y: number): void {\n    this.position.x = clamp(x, 0, this._saturationWidth)\n    this.position.y = clamp(y, 0, this._hueHeight)\n\n    this.$sbSelector.style.transform = `translate(${this.position.x}px, ${this.position.y}px)`\n  }\n\n  private _updateColorFromPosition(): void {\n    this.color.fromHsv({\n      h: this.hue,\n      s: this.position.x / this._saturationWidth,\n      v: 1 - this.position.y / this._hueHeight\n    })\n    this._updateColor()\n  }\n\n  private _moveHueTo(y: number): void {\n    this._huePosition = clamp(y, 0, this._maxHue)\n    this.$hSelector.style.transform = `translateY(${this._huePosition}px)`\n  }\n\n  private _updateHueFromPosition(): void {\n    const hsvColor = this.getHSV()\n    this.hue = 1 - this._huePosition / this._maxHue\n    this.color.fromHsv({ h: this.hue, s: hsvColor.s, v: hsvColor.v })\n    this._updateHue()\n  }\n\n  private _updateHue(): void {\n    this.hueColor.fromHsv({ h: this.hue, s: 1, v: 1 })\n    this.$saturation.style.background = `linear-gradient(to right, #fff, ${this.hueColor.hexString})`\n    this._updateColor()\n  }\n\n  private _updateColor(): void {\n    this.$sbSelector.style.background = this.getHexString()\n    this.$sbSelector.style.borderColor = this.isDark() ? '#fff' : '#000'\n    this._triggerChange()\n  }\n\n  private _triggerChange(): void {\n    this._callbacks.forEach(callback => callback(this.getHexString()))\n  }\n\n  /* =============================================================================\n    Events handlers\n  ============================================================================= */\n  private _onSaturationMouseDown = (e: MouseEvent | TouchEvent): void => {\n    const sbOffset = this.$saturation.getBoundingClientRect()\n    const { x, y } = getMousePosition(e)\n    this._moveSelectorTo(x - sbOffset.left, y - sbOffset.top)\n    this._updateColorFromPosition()\n    this._window.addEventListener('mouseup', this._onSaturationMouseUp)\n    this._window.addEventListener('touchend', this._onSaturationMouseUp)\n    this._window.addEventListener('mousemove', this._onSaturationMouseMove)\n    this._window.addEventListener('touchmove', this._onSaturationMouseMove)\n    e.preventDefault()\n  }\n\n  private _onSaturationMouseMove = (e: MouseEvent | TouchEvent): void => {\n    const sbOffset = this.$saturation.getBoundingClientRect()\n    const { x, y } = getMousePosition(e)\n    this._moveSelectorTo(x - sbOffset.left, y - sbOffset.top)\n    this._updateColorFromPosition()\n  }\n\n  private _onSaturationMouseUp = () => {\n    this._window.removeEventListener('mouseup', this._onSaturationMouseUp)\n    this._window.removeEventListener('touchend', this._onSaturationMouseUp)\n    this._window.removeEventListener('mousemove', this._onSaturationMouseMove)\n    this._window.removeEventListener('touchmove', this._onSaturationMouseMove)\n  }\n\n  private _onHueMouseDown = (e: MouseEvent | TouchEvent): void => {\n    const hOffset = this.$hue.getBoundingClientRect()\n    const { y } = getMousePosition(e)\n    this._moveHueTo(y - hOffset.top)\n    this._updateHueFromPosition()\n    this._window.addEventListener('mouseup', this._onHueMouseUp)\n    this._window.addEventListener('touchend', this._onHueMouseUp)\n    this._window.addEventListener('mousemove', this._onHueMouseMove)\n    this._window.addEventListener('touchmove', this._onHueMouseMove)\n    e.preventDefault()\n  }\n\n  private _onHueMouseMove = e => {\n    const hOffset = this.$hue.getBoundingClientRect()\n    const { y } = getMousePosition(e)\n    this._moveHueTo(y - hOffset.top)\n    this._updateHueFromPosition()\n  }\n\n  private _onHueMouseUp = () => {\n    this._window.removeEventListener('mouseup', this._onHueMouseUp)\n    this._window.removeEventListener('touchend', this._onHueMouseUp)\n    this._window.removeEventListener('mousemove', this._onHueMouseMove)\n    this._window.removeEventListener('touchmove', this._onHueMouseMove)\n  }\n}\n"],"names":["isNumber","num","isNaN","clamp","value","min","max","Math","getMousePosition","e","type","indexOf","touch","touches","x","clientX","y","clientY","pad2","c","length","Color","color","this","r","g","b","a","h","s","v","fromHex","_hexNumber","_hexString","toString","substr","toUpperCase","numberToHexString","hexStringToNumber","hexNumberToRgb","_rgba","d","rgbToHsv","_hsva","_updateBrightness","fromHsv","i","floor","f","p","q","t","mod","hsvToRgb","round","join","rgbToHex","_brightness","_isDark","_isLight","parseInt","replace","ColorPicker","options","sbOffset","_this","$saturation","getBoundingClientRect","_moveSelectorTo","left","top","_updateColorFromPosition","_window","addEventListener","_onSaturationMouseUp","_onSaturationMouseMove","preventDefault","removeEventListener","hOffset","$hue","_moveHueTo","_updateHueFromPosition","_onHueMouseUp","_onHueMouseMove","window","_document","document","$el","createElement","className","innerHTML","querySelector","$sbSelector","$hSelector","_onSaturationMouseDown","_onHueMouseDown","el","appendTo","background","setBackgroundColor","widthUnits","_widthUnits","heightUnits","_heightUnits","setSize","width","height","setColor","appendChild","remove","_callbacks","parentNode","removeChild","_inputIsNumber","hsv","hue","_saturationWidth","_hueHeight","_updateHue","style","_maxHue","backgroundColor","padding","hexString","setNoBackground","onChange","callback","push","getHexString","getColor","getHexNumber","hex","getRGB","rgb","getHSV","isDark","isLight","position","transform","_updateColor","_huePosition","hsvColor","hueColor","borderColor","_triggerChange","forEach","_this2"],"mappings":"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"}